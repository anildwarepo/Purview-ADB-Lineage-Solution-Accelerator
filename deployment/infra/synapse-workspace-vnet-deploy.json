{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
       
         "rg_name": {
            "type": "String",
             "metadata": {
                "description": "Synapse workspace Resource Group name"
            }
        },
        "vnetNameRgName": {
                "type": "String",
                "metadata": {
                    "description": "The name of the resource group containing the virtual network for virtual network integration."
                }
        },
        "vnetName": {
            "type": "string",
            "metadata": {
            "description": "The name of the virtual network for virtual network integration."
            }
        },
        "privateEndpointSubnetName": {
            "type": "string",
            "metadata": {
            "description": "The name of the virtual network subnet used for allocating IP addresses for private endpoints."
            }
        },
        "blobPrivateDNSZoneResourceGroupName": {
			"type": "string",
			"metadata": {
				"description": "Resource group name where privatelink.blob.core.windows.net Private DNS Zone exists"
			}
		},
        "dfsPrivateDNSZoneResourceGroupName": {
			"type": "string",
			"metadata": {
				"description": "Resource group name where privatelink.dfs.core.windows.net Private DNS Zone exists"
			}
		},
        "sqlPrivateDNSZoneResourceGroupName": {
			"type": "string",
			"metadata": {
				"description": "Resource group name where privatelink.sql.azuresynapse.net Private DNS Zone exists"
			}
		},
        "workspacePrivateDNSZoneResourceGroupName": {
			"type": "string",
			"metadata": {
				"description": "Resource group name where privatelink.dev.azuresynapse.net Private DNS Zone exists"
			}
		},
        "keyvaultPrivateDNSZoneResourceGroupName": {
			"type": "string",
			"metadata": {
				"description": "Resource group name where privatelink.vaultcore.azure.net Private DNS Zone exists"
			}
		},
        "synapse_workspace_name": {
            "type": "String",
             "metadata": {
                "description": "Synapse workspace name"
            }
        },
        "storageAccounts_synapse_workspace": {
            "type": "String",
             "metadata": {
                "description": "Synapse workspace storage account name"
            }
        },
        "storageAccounts_synapse_workspace_filesystem": {
            "type": "String",
             "metadata": {
                "description": "File System name for Synapse workspace storage account"
            }
        },          
        "spark_pool_name": {
            "defaultValue": "sparkpool1",
            "type": "String",
             "metadata": {
                "description": "spark pool name in Synapse workspace"
            }
        },
        "privateEndpoints_sql_pe_name": {
            "type": "String",
            "metadata": {
                "description": "SQL private endpoint name"
            }
        },
        "privateEndpoints_serverless_pe_name": {
            "type": "String",
            "metadata": {
                "description": "SQL Serverless private endpoint name"
            }
        },
        "privateEndpoints_workspace_pe_name": {
            "type": "String",
            "metadata": {
                "description": "workspace private endpoint name"
            }
        },
        "sqlAdminUserName": {
            "type": "String",
            "metadata": {
                "description": "Sql admin user name"
            }
        },
        "keyvaultPrivateEndpointName": {
          "type": "string",
          "defaultValue": "KeyVaultPrivateEndpoint",
          "metadata": {
              "description": "Specifies the name of the private link to the key vault."
          }
        }

    },
    "variables": {
        "uniqueName": "[substring(uniqueString(parameters('rg_name')),0,4)]",
        "privateEndpointStorageBlobName": "[format('{0}-blob-private-endpoint', parameters('storageAccounts_synapse_workspace'))]",
        "privateEndpointStorageDfsName": "[format('{0}-dfs-private-endpoint', parameters('storageAccounts_synapse_workspace'))]",
        "privateStorageBlobDnsZoneName": "[format('privatelink.blob.{0}', environment().suffixes.storage)]",
        "privateStorageDfsDnsZoneName": "[format('privatelink.dfs.{0}', environment().suffixes.storage)]",
        "privateStorageSqlDnsZoneName": "privatelink.sql.azuresynapse.net",
        "privateStorageDevDnsZoneName": "privatelink.dev.azuresynapse.net",
        "openlineageKeyVaultName": "[concat('keyvault',variables('uniqueName'))]",
        "keyvaultPrivateEndpointGroupName": "vault",
        "keyvaultPrivateDnsZoneName": "privatelink.vaultcore.azure.net"
    },
    "resources": [
            {
            "type": "Microsoft.Network/privateEndpoints",
            "apiVersion": "2022-05-01",
            "name": "[variables('privateEndpointStorageBlobName')]",
            "location": "[resourceGroup().location]",
            "properties": {
            "subnet": {
                "id": "[resourceId(parameters('vnetNameRgName'), 'Microsoft.Network/virtualNetworks/subnets', parameters('vnetName'), parameters('privateEndpointSubnetName'))]"
            },
            "privateLinkServiceConnections": [
                {
                "name": "MyStorageBlobPrivateLinkConnection",
                "properties": {
                    "privateLinkServiceId": "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_synapse_workspace'))]",
                    "groupIds": [
                    "blob"
                    ]
                }
                }
            ]
            },
            "dependsOn": [
            "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_synapse_workspace'))]"
            ]
        },
        {
            "type": "Microsoft.Network/privateEndpoints",
            "apiVersion": "2022-05-01",
            "name": "[variables('privateEndpointStorageDfsName')]",
            "location": "[resourceGroup().location]",
            "properties": {
            "subnet": {
                "id": "[resourceId(parameters('vnetNameRgName'), 'Microsoft.Network/virtualNetworks/subnets', parameters('vnetName'), parameters('privateEndpointSubnetName'))]"
            },
            "privateLinkServiceConnections": [
                {
                "name": "MyStorageDfsPrivateLinkConnection",
                "properties": {
                    "privateLinkServiceId": "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_synapse_workspace'))]",
                    "groupIds": [
                    "dfs"
                    ]
                }
                }
            ]
            },
            "dependsOn": [
            "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_synapse_workspace'))]"
            ]
        },
        {
            "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
            "apiVersion": "2022-05-01",
            "name": "[format('{0}/{1}', variables('privateEndpointStorageDfsName'), 'dfsPrivateDnsZoneGroup')]",
            "properties": {
            "privateDnsZoneConfigs": [
                {
                "name": "config",
                "properties": {
                    "privateDnsZoneId": "[resourceId(parameters('dfsPrivateDNSZoneResourceGroupName'), 'Microsoft.Network/privateDnsZones', variables('privateStorageDfsDnsZoneName'))]"
                }
                }
            ]
            },
            "dependsOn": [
            "[resourceId('Microsoft.Network/privateEndpoints', variables('privateEndpointStorageDfsName'))]"
            ]
        },
        {
            "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
            "apiVersion": "2022-05-01",
            "name": "[format('{0}/{1}', variables('privateEndpointStorageBlobName'), 'blobPrivateDnsZoneGroup')]",
            "properties": {
            "privateDnsZoneConfigs": [
                {
                "name": "config",
                "properties": {
                    "privateDnsZoneId": "[resourceId(parameters('blobPrivateDNSZoneResourceGroupName'), 'Microsoft.Network/privateDnsZones', variables('privateStorageBlobDnsZoneName'))]"
                }
                }
            ]
            },
            "dependsOn": [
            "[resourceId('Microsoft.Network/privateEndpoints', variables('privateEndpointStorageBlobName'))]"
            ]
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2021-09-01",
            "name": "[parameters('storageAccounts_synapse_workspace')]",
            "location": "[resourceGroup().location]",
            "kind": "StorageV2",
            "sku": {
                "name": "Standard_LRS"
            },
            "properties": {
                "publicNetworkAccess": "Disabled",
                "allowBlobPublicAccess": false,
                "networkAcls": {
                    "bypass": "None",
                    "defaultAction": "Deny"
                },
                "isHnsEnabled": true   
                
            }
        },
        {
            "type": "Microsoft.Network/privateEndpoints",
            "apiVersion": "2022-05-01",
            "name": "[parameters('privateEndpoints_sql_pe_name')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Synapse/workspaces', parameters('synapse_workspace_name'))]"
            ],
            "properties": {
                "privateLinkServiceConnections": [
                    {
                        "name": "[parameters('privateEndpoints_sql_pe_name')]",
                        "id": "[concat(resourceId('Microsoft.Network/privateEndpoints', parameters('privateEndpoints_sql_pe_name')), concat('/privateLinkServiceConnections/', parameters('privateEndpoints_sql_pe_name')))]",
                        "properties": {
                            "privateLinkServiceId": "[resourceId('Microsoft.Synapse/workspaces', parameters('synapse_workspace_name'))]",
                            "groupIds": [
                                "Sql"
                            ],
                            "privateLinkServiceConnectionState": {
                                "status": "Approved"
                            }
                        }
                    }
                ],
                "manualPrivateLinkServiceConnections": [],
                "customNetworkInterfaceName": "[concat(parameters('privateEndpoints_sql_pe_name'), '-nic')]",
                 "subnet": {
                    "id": "[resourceId(parameters('vnetNameRgName'), 'Microsoft.Network/virtualNetworks/subnets', parameters('vnetName'), parameters('privateEndpointSubnetName'))]"
                },
                "ipConfigurations": [],
                "customDnsConfigs": []
            }
        },
        {
            "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
            "apiVersion": "2022-05-01",
            "name": "[concat(parameters('privateEndpoints_sql_pe_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateEndpoints', parameters('privateEndpoints_sql_pe_name'))]"
            ],
            "properties": {
                "privateDnsZoneConfigs": [
                    {
                        "name": "privatelink-sql-azuresynapse-net",
                        "properties": {
                            "privateDnsZoneId": "[resourceId(parameters('sqlPrivateDNSZoneResourceGroupName'), 'Microsoft.Network/privateDnsZones', variables('privateStorageSqlDnsZoneName'))]"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/privateEndpoints",
            "apiVersion": "2022-05-01",
            "name": "[parameters('privateEndpoints_serverless_pe_name')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Synapse/workspaces', parameters('synapse_workspace_name'))]"
            ],
            "properties": {
                "privateLinkServiceConnections": [
                    {
                        "name": "[parameters('privateEndpoints_serverless_pe_name')]",
                        "id": "[concat(resourceId('Microsoft.Network/privateEndpoints', parameters('privateEndpoints_serverless_pe_name')), concat('/privateLinkServiceConnections/', parameters('privateEndpoints_serverless_pe_name')))]",
                        "properties": {
                            "privateLinkServiceId": "[resourceId('Microsoft.Synapse/workspaces', parameters('synapse_workspace_name'))]",
                            "groupIds": [
                                "SqlOnDemand"
                            ],
                            "privateLinkServiceConnectionState": {
                                "status": "Approved"
                            }
                        }
                    }
                ],
                "manualPrivateLinkServiceConnections": [],
                "customNetworkInterfaceName": "[concat(parameters('privateEndpoints_serverless_pe_name'), '-nic')]",
                 "subnet": {
                    "id": "[resourceId(parameters('vnetNameRgName'), 'Microsoft.Network/virtualNetworks/subnets', parameters('vnetName'), parameters('privateEndpointSubnetName'))]"
                },
                "ipConfigurations": [],
                "customDnsConfigs": []
            }
        },
        {
            "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
            "apiVersion": "2022-05-01",
            "name": "[concat(parameters('privateEndpoints_serverless_pe_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateEndpoints', parameters('privateEndpoints_serverless_pe_name'))]"
            ],
            "properties": {
                "privateDnsZoneConfigs": [
                    {
                        "name": "privatelink-sql-azuresynapse-net",
                        "properties": {
                            "privateDnsZoneId": "[resourceId(parameters('sqlPrivateDNSZoneResourceGroupName'), 'Microsoft.Network/privateDnsZones', variables('privateStorageSqlDnsZoneName'))]"
                        }
                    }
                ]
            }
        },
        
        {
            "type": "Microsoft.Network/privateEndpoints",
            "apiVersion": "2022-05-01",
            "name": "[parameters('privateEndpoints_workspace_pe_name')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Synapse/workspaces', parameters('synapse_workspace_name'))]"
            ],
            "properties": {
                "privateLinkServiceConnections": [
                    {
                        "name": "[parameters('privateEndpoints_sql_pe_name')]",
                        "id": "[concat(resourceId('Microsoft.Network/privateEndpoints', parameters('privateEndpoints_workspace_pe_name')), concat('/privateLinkServiceConnections/', parameters('privateEndpoints_workspace_pe_name')))]",
                        "properties": {
                            "privateLinkServiceId": "[resourceId('Microsoft.Synapse/workspaces', parameters('synapse_workspace_name'))]",
                            "groupIds": [
                                "Dev"
                            ],
                            "privateLinkServiceConnectionState": {
                                "status": "Approved"
                            }
                        }
                    }
                ],
                "manualPrivateLinkServiceConnections": [],
                "customNetworkInterfaceName": "[concat(parameters('privateEndpoints_workspace_pe_name'), '-nic')]",
                 "subnet": {
                    "id": "[resourceId(parameters('vnetNameRgName'), 'Microsoft.Network/virtualNetworks/subnets', parameters('vnetName'), parameters('privateEndpointSubnetName'))]"
                },
                "ipConfigurations": [],
                "customDnsConfigs": []
            }
        },
        {
            "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
            "apiVersion": "2022-05-01",
            "name": "[concat(parameters('privateEndpoints_workspace_pe_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateEndpoints', parameters('privateEndpoints_workspace_pe_name'))]"
            ],
            "properties": {
                "privateDnsZoneConfigs": [
                    {
                        "name": "privatelink-sql-azuresynapse-net",
                        "properties": {
                            "privateDnsZoneId": "[resourceId(parameters('workspacePrivateDNSZoneResourceGroupName'), 'Microsoft.Network/privateDnsZones', variables('privateStorageDevDnsZoneName'))]"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Synapse/workspaces",
            "apiVersion": "2021-06-01",
            "name": "[parameters('synapse_workspace_name')]",
            "location": "[resourceGroup().location]",
            "identity": {
                "type": "SystemAssigned"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_synapse_workspace'))]"
            ],
            "properties": {
                "defaultDataLakeStorage": {
                    "resourceId": "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_synapse_workspace'))]",
                    "createManagedPrivateEndpoint": true,
                    "accountUrl": "[concat('https://',parameters('storageAccounts_synapse_workspace'),'.dfs.core.windows.net')]",
                    "filesystem": "[parameters('storageAccounts_synapse_workspace_filesystem')]"
                },
                "encryption": {},
                "managedVirtualNetwork": "default",
                "connectivityEndpoints": {
                    "web": "[concat('https://web.azuresynapse.net?workspace=%2fsubscriptions%2f',subscription().subscriptionId,'%2fresourceGroups%2f', parameters('rg_name'), '%2fproviders%2fMicrosoft.Synapse%2fworkspaces%2f', parameters('synapse_workspace_name'))]",
                    "dev": "[concat('https://', parameters('synapse_workspace_name'), '.dev.azuresynapse.net')]",
                    "sqlOnDemand": "[concat(parameters('synapse_workspace_name'), '-ondemand.sql.azuresynapse.net')]",
                    "sql": "[concat(parameters('synapse_workspace_name'), '.sql.azuresynapse.net')]"
                },
                "managedResourceGroupName": "[concat('synapseworkspace-managedrg-', variables('uniqueName'))]",
                "sqlAdministratorLogin": "[parameters('sqlAdminUserName')]",
                "privateEndpointConnections": [
                    
              
                ],
                "managedVirtualNetworkSettings": {
                    "preventDataExfiltration": false,
                    "allowedAadTenantIdsForLinking": []
                },
                "publicNetworkAccess": "Disabled",
                "cspWorkspaceAdminProperties": {
                    "initialWorkspaceAdminObjectId": "19dd504a-49a2-4e4e-a4ac-a0b783e54053"
                },
                "azureADOnlyAuthentication": false,
                "trustedServiceBypassEnabled": false
            }
        },
        
        {
            "type": "Microsoft.Synapse/workspaces/azureADOnlyAuthentications",
            "apiVersion": "2021-06-01",
            "name": "[concat(parameters('synapse_workspace_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Synapse/workspaces', parameters('synapse_workspace_name'))]"
            ],
            "properties": {
                "azureADOnlyAuthentication": false
            }
        },
        {
            "type": "Microsoft.Synapse/workspaces/bigDataPools",
            "apiVersion": "2021-06-01",
            "name": "[concat(parameters('synapse_workspace_name'), '/', parameters('spark_pool_name'))]",
            "location": "westus2",
            "dependsOn": [
                "[resourceId('Microsoft.Synapse/workspaces', parameters('synapse_workspace_name'))]"
            ],
            "properties": {
                "sparkVersion": "3.2",
                "nodeCount": 3,
                "nodeSize": "Small",
                "nodeSizeFamily": "MemoryOptimized",
                "autoScale": {
                    "enabled": false,
                    "minNodeCount": 3,
                    "maxNodeCount": 10
                },
                "autoPause": {
                    "enabled": true,
                    "delayInMinutes": 15
                },
                "isComputeIsolationEnabled": false,
                "sparkConfigProperties": {
                },
                "sessionLevelPackagesEnabled": false,
                "cacheSize": 50,
                "dynamicExecutorAllocation": {
                    "enabled": false
                },
                "isAutotuneEnabled": false
               
            }
        },
        {
            "type": "Microsoft.Synapse/workspaces/integrationruntimes",
            "apiVersion": "2021-06-01",
            "name": "[concat(parameters('synapse_workspace_name'), '/AutoResolveIntegrationRuntime')]",
            "dependsOn": [
                "[resourceId('Microsoft.Synapse/workspaces', parameters('synapse_workspace_name'))]"
            ],
            "properties": {
                "type": "Managed",
                "typeProperties": {
                    "computeProperties": {
                        "location": "AutoResolve",
                        "dataFlowProperties": {
                            "computeType": "General",
                            "coreCount": 8,
                            "timeToLive": 0
                        }
                    }
                },
                "managedVirtualNetwork": {
                    "referenceName": "default",
                    "type": "ManagedVirtualNetworkReference",
                    "id": "a54c41a5-99ea-44d3-b32a-eeabf65eaccf"
                }
            }
        },
        {
          "type": "Microsoft.KeyVault/vaults",
          "name": "[variables('openlineageKeyVaultName')]",
          "apiVersion": "2019-09-01",
          "location": "[resourceGroup().location]",
          "properties": {
            "sku": {
              "family": "A",
              "name": "Standard"
            },
            "tenantId": "[subscription().tenantId]",      
            "accessPolicies": [],      
            "networkAcls": {
                "bypass": "None",
                "defaultAction": "Allow",
                "ipRules": []
                
            },
            "publicNetworkAccess": "Disabled",
            "enableSoftDelete": false,
            "enabledForDeployment": false,
            "enabledForDiskEncryption": false,
            "enabledForTemplateDeployment": false
          },
          "dependsOn": []
        },
        {
            "type": "Microsoft.Network/privateEndpoints",
            "apiVersion": "2020-04-01",
            "name": "[parameters('keyvaultPrivateEndpointName')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', variables('openlineageKeyVaultName'))]"
            ],
            "properties": {
                "privateLinkServiceConnections": [
                {
                    "name": "[parameters('keyvaultPrivateEndpointName')]",
                    "properties": {
                    "privateLinkServiceId": "[resourceId('Microsoft.KeyVault/vaults', variables('openlineageKeyVaultName'))]",
                    "groupIds": [
                        "[variables('keyvaultPrivateEndpointGroupName')]"
                    ]
                    }
                }
                ],
                "subnet": {
                "id": "[resourceId(parameters('vnetNameRgName'),'Microsoft.Network/virtualNetworks/subnets', parameters('vnetName'), parameters('privateEndpointSubnetName'))]"
                },
                "customDnsConfigs": [
                {
                    "fqdn": "[concat(variables('openlineageKeyVaultName'), '.vault.azure.net')]"
                }
                ]
            }
        },
        {
            "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
            "apiVersion": "2022-05-01",
            "name": "[format('{0}/{1}', parameters('keyvaultPrivateEndpointName'), 'keyvaultPrivateDnsZoneGroup')]",
            "properties": {
                "privateDnsZoneConfigs": [
                {
                    "name": "config",
                    "properties": {
                    "privateDnsZoneId": "[resourceId(parameters('keyvaultPrivateDNSZoneResourceGroupName'),'Microsoft.Network/privateDnsZones', variables('keyvaultPrivateDnsZoneName'))]"
                    }
                }
                ]
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateEndpoints', parameters('keyvaultPrivateEndpointName'))]"
            ]
        }
    ]
}